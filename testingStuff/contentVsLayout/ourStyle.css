@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700;900&display=swap");

:root {
  --spacer: 1rem;

  --clr-neutral-100: #fff;
  --clr-neutral-400: #333;
  --clr-neutral-900: #111;
  --clr-primary-400: #3c1500;

  --fw-700: 900;
  --fw-400: 300;

  --fs-400: 1.125rem;
  --fs-500: 1.5rem;
  --fs-600: 2.25rem;
  --fs-700: 3rem;
}

/* reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
p {
  margin: 0;
}

body {
  font-family: "Roboto", sans-serif;
  line-height: 1.5;
  font-weight: var(--fw-400);
  font-size: var(--fs-400);
  color: var(--clr-neutral-400);
}

img {
  max-width: 100%;
  display: block;
}
/* just testing stuff */

.sticky-please {
  position: sticky;
  top: 0;
}

/* Utility classes */

.flow-content > * + * {
  margin-top: var(--spacer);
}

.margin-top--large {
  margin-top: 2em;
}

.margin-top--med {
  margin-top: 1.5em;
}

[class*="bg-"] {
  background: var(--bg, var(--clr-neutral-100));
  color: var(--fg, var(--clr-primary-400));
}

.bg-dark {
  --bg: var(--clr-primary-400);
  --fg: var(--clr-neutral-100);
}

.bg-light {
  --bg: var(--clr-neutral-100);
  --fg: var(--clr-neutral-900);
}

.split {
  /* if we dont want other items to stretch we can use align-self: flex-start because the default value for align-items for flex item is stretch */
  display: flex;
  flex-flow: column nowrap;
  gap: 1em;
}

/* general styling */

p {
  font-weight: lighter;
}

.plans {
  margin-top: 1.5em;
}

.plan {
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
  padding: 1em;
}

@media screen and (min-width: 40em) {
  .split {
    flex-flow: row nowrap;
  }
  /*
  make sure when we use the col-1 or col-3 to control the flex-basis of the flex items. make sure we dont make one flex item 25% while the other flex item wants to be
  100% because most flex items with our code will want to be 100% due to flex-basis: 100% declared with .split > * {flex-basis: 100%}
  */
  .split > * {
    /* the other flex-item property will be flex-grow: 0, flex-shrink: 1 */
    flex-basis: 100%;
  }

  /* .col-1{
    flex-basis: 25%;
  }

  .col-2{
    flex-basis: 50%;
  }

  .col-3{
    flex-basis: 75%;
  } */
  /* .plan {
    flex-basis: 45%;
  } */
}

section:first-of-type {
  background-image: url(./img/hero-bg.jpg);
  background-size: cover;
}

section {
  background: var(--bg);
  color: var(--fg);
  padding: 10em;
}

.container {
  /* this should just control our content 
  when we need a container inside our div or nav or we we need a container.
  */
  max-width: 60em;
  margin: 0 auto;
}

.h1 {
  font-size: var(--fs-700);
  line-height: 1;
}

h2 {
  font-size: var(--fs-600);
}

h3 {
  font-size: var(--fs-500);
}
/* components */

.btn {
  /* the outer roles is inline the inner role is block */
  display: inline-block;
  background: var(--fg, var(--clr-primary-400));
  color: var(--bg, var(--clr-neutral-100));
  padding: 0.5em 1.5em;
  font-weight: var(--fw-700);
}

/* display: inline-flex means outer role is inline inner role is flex. */
